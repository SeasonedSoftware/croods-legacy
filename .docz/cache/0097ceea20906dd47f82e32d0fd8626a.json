{"remainingRequest":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",\"@babel/preset-flow\",\"@babel/preset-typescript\",[\"/Users/milesdavis/workspace/croods/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"syntax-async-functions\",\"transform-async-to-generator\",\"transform-regenerator\",\"@babel/plugin-transform-runtime\",\"@babel/plugin-proposal-function-bind\",[\"/Users/milesdavis/workspace/croods/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/milesdavis/workspace/croods/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/milesdavis/workspace/croods/src/providerProps.js","dependencies":[{"path":"/Users/milesdavis/workspace/croods/src/providerProps.js","mtime":1547833007000},{"path":"/Users/milesdavis/workspace/croods/node_modules/cache-loader/dist/cjs.js","mtime":1547833067000},{"path":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js","mtime":1547833067000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport PropTypes from 'prop-types';\nimport customPropTypes from './customPropTypes';\nvar _default = {\n  baseUrl: customPropTypes.url,\n  credentials: PropTypes.string,\n  headers: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  // ({ Accept, 'Content-Type' }) -> Object\n  renderLoading: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  // undefined -> Html\n  renderError: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  // error -> Html\n  afterSuccess: PropTypes.func,\n  // (response, json)\n  afterFailure: PropTypes.func,\n  // (response, json)\n  afterResponse: PropTypes.func,\n  // (response, json)\n  disableCache: PropTypes.bool,\n\n  /** Logs requests parameters to the console: method, credentials and headers */\n  debugRequests: PropTypes.bool,\n\n  /** Parse responses to adjust the API to croods patterns */\n  parseResponse: PropTypes.func // (json, response, requestAttributes) -> Object\n\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/milesdavis/workspace/croods/src/providerProps.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/milesdavis/workspace/croods/src/providerProps.js"],"names":["PropTypes","customPropTypes","baseUrl","url","credentials","string","headers","oneOfType","func","object","renderLoading","bool","renderError","afterSuccess","afterFailure","afterResponse","disableCache","debugRequests","parseResponse"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;eAEe;AACbC,EAAAA,OAAO,EAAED,eAAe,CAACE,GADZ;AAEbC,EAAAA,WAAW,EAAEJ,SAAS,CAACK,MAFV;AAGbC,EAAAA,OAAO,EAAEN,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACQ,IAAX,EAAiBR,SAAS,CAACS,MAA3B,CAApB,CAHI;AAGqD;AAClEC,EAAAA,aAAa,EAAEV,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACQ,IAAX,EAAiBR,SAAS,CAACW,IAA3B,CAApB,CAJF;AAIyD;AACtEC,EAAAA,WAAW,EAAEZ,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACQ,IAAX,EAAiBR,SAAS,CAACW,IAA3B,CAApB,CALA;AAKuD;AACpEE,EAAAA,YAAY,EAAEb,SAAS,CAACQ,IANX;AAMiB;AAC9BM,EAAAA,YAAY,EAAEd,SAAS,CAACQ,IAPX;AAOiB;AAC9BO,EAAAA,aAAa,EAAEf,SAAS,CAACQ,IARZ;AAQkB;AAC/BQ,EAAAA,YAAY,EAAEhB,SAAS,CAACW,IATX;;AAWb;AACAM,EAAAA,aAAa,EAAEjB,SAAS,CAACW,IAZZ;;AAcb;AACAO,EAAAA,aAAa,EAAElB,SAAS,CAACQ,IAfZ,CAekB;;AAflB,C;AAAf","sourcesContent":["import PropTypes from 'prop-types'\n\nimport customPropTypes from './customPropTypes'\n\nexport default {\n  baseUrl: customPropTypes.url,\n  credentials: PropTypes.string,\n  headers: PropTypes.oneOfType([PropTypes.func, PropTypes.object]), // ({ Accept, 'Content-Type' }) -> Object\n  renderLoading: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // undefined -> Html\n  renderError: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]), // error -> Html\n  afterSuccess: PropTypes.func, // (response, json)\n  afterFailure: PropTypes.func, // (response, json)\n  afterResponse: PropTypes.func, // (response, json)\n  disableCache: PropTypes.bool,\n\n  /** Logs requests parameters to the console: method, credentials and headers */\n  debugRequests: PropTypes.bool,\n\n  /** Parse responses to adjust the API to croods patterns */\n  parseResponse: PropTypes.func, // (json, response, requestAttributes) -> Object\n}\n"]}]}