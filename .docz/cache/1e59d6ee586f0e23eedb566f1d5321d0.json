{"remainingRequest":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",\"@babel/preset-flow\",\"@babel/preset-typescript\",[\"/Users/milesdavis/workspace/croods/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"syntax-async-functions\",\"transform-async-to-generator\",\"transform-regenerator\",\"@babel/plugin-transform-runtime\",\"@babel/plugin-proposal-function-bind\",[\"/Users/milesdavis/workspace/croods/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/milesdavis/workspace/croods/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/milesdavis/workspace/croods/src/nestedReducer.js","dependencies":[{"path":"/Users/milesdavis/workspace/croods/src/nestedReducer.js","mtime":1545044906000},{"path":"/Users/milesdavis/workspace/croods/node_modules/cache-loader/dist/cjs.js","mtime":1547833067000},{"path":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js","mtime":1547833067000}],"contextDependencies":[],"result":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport find from 'lodash/find';\nimport toString from 'lodash/toString';\nimport map from 'lodash/map';\nimport { getInitialState } from './reducer/initialState';\n\nvar _default = function _default(reducer) {\n  return function (state) {\n    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var isCurrentBlock = function isCurrentBlock(_ref) {\n      var parentId = _ref.parentId;\n      return toString(parentId) === toString(action.parentId);\n    };\n\n    var statePart = find(state, isCurrentBlock);\n    var newState = statePart ? state : [].concat(_toConsumableArray(state), [getInitialState(action.parentId)]);\n    return reducer ? map(newState, function (block) {\n      return isCurrentBlock(block) ? _objectSpread({}, block, {\n        state: reducer(block.state, action)\n      }) : block;\n    }) : newState;\n  };\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/milesdavis/workspace/croods/src/nestedReducer.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/milesdavis/workspace/croods/src/nestedReducer.js"],"names":["find","toString","map","getInitialState","reducer","state","action","isCurrentBlock","parentId","statePart","newState","block"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,eAAT,QAAgC,wBAAhC;;eAEe,kBAAAC,OAAO;AAAA,SAAI,UAACC,KAAD,EAAwB;AAAA,QAAhBC,MAAgB,uEAAP,EAAO;;AAChD,QAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,UAAGC,QAAH,QAAGA,QAAH;AAAA,aACrBP,QAAQ,CAACO,QAAD,CAAR,KAAuBP,QAAQ,CAACK,MAAM,CAACE,QAAR,CADV;AAAA,KAAvB;;AAEA,QAAMC,SAAS,GAAGT,IAAI,CAACK,KAAD,EAAQE,cAAR,CAAtB;AACA,QAAMG,QAAQ,GAAGD,SAAS,GACtBJ,KADsB,gCAElBA,KAFkB,IAEXF,eAAe,CAACG,MAAM,CAACE,QAAR,CAFJ,EAA1B;AAGA,WAAOJ,OAAO,GACVF,GAAG,CACDQ,QADC,EAED,UAAAC,KAAK;AAAA,aACHJ,cAAc,CAACI,KAAD,CAAd,qBACSA,KADT;AACgBN,QAAAA,KAAK,EAAED,OAAO,CAACO,KAAK,CAACN,KAAP,EAAcC,MAAd;AAD9B,WAEIK,KAHD;AAAA,KAFJ,CADO,GAQVD,QARJ;AASD,GAhBqB;AAAA,C;;AAAtB","sourcesContent":["import find from 'lodash/find'\nimport toString from 'lodash/toString'\nimport map from 'lodash/map'\nimport { getInitialState } from './reducer/initialState'\n\nexport default reducer => (state, action = {}) => {\n  const isCurrentBlock = ({ parentId }) =>\n    toString(parentId) === toString(action.parentId)\n  const statePart = find(state, isCurrentBlock)\n  const newState = statePart\n    ? state\n    : [...state, getInitialState(action.parentId)]\n  return reducer\n    ? map(\n        newState,\n        block =>\n          isCurrentBlock(block)\n            ? { ...block, state: reducer(block.state, action) }\n            : block,\n      )\n    : newState\n}\n"]}]}