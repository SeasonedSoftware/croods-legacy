{"remainingRequest":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",\"@babel/preset-flow\",\"@babel/preset-typescript\",[\"/Users/milesdavis/workspace/croods/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"syntax-async-functions\",\"transform-async-to-generator\",\"transform-regenerator\",\"@babel/plugin-transform-runtime\",\"@babel/plugin-proposal-function-bind\",\"@babel/external-helpers\",[\"/Users/milesdavis/workspace/croods/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/milesdavis/workspace/croods/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/milesdavis/workspace/croods/src/createActions.js","dependencies":[{"path":"/Users/milesdavis/workspace/croods/src/createActions.js","mtime":1545044906000},{"path":"/Users/milesdavis/workspace/croods/node_modules/cache-loader/dist/cjs.js","mtime":1547833067000},{"path":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js","mtime":1547833067000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport fetchList from './actions/fetchList';\nimport fetchInfo from './actions/fetchInfo';\nimport setInfo from './actions/setInfo';\nimport setList from './actions/setList';\nimport create from './actions/create';\nimport resetCreated from './actions/resetCreated';\nimport resetCreateError from './actions/resetCreateError';\nimport update from './actions/update';\nimport resetUpdated from './actions/resetUpdated';\nimport destroy from './actions/destroy';\nimport resetDestroyed from './actions/resetDestroyed';\n\nvar _default = function _default(options) {\n  return {\n    fetchList: fetchList(options),\n    fetchInfo: fetchInfo(options),\n    setInfo: setInfo(options),\n    setList: setList(options),\n    create: create(options),\n    resetCreated: resetCreated(options),\n    resetCreateError: resetCreateError(options),\n    update: update(options),\n    resetUpdated: resetUpdated(options),\n    destroy: destroy(options),\n    resetDestroyed: resetDestroyed(options)\n  };\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/milesdavis/workspace/croods/src/createActions.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/milesdavis/workspace/croods/src/createActions.js"],"names":["fetchList","fetchInfo","setInfo","setList","create","resetCreated","resetCreateError","update","resetUpdated","destroy","resetDestroyed","options"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;eAEe,kBAAAC,OAAO;AAAA,SAAK;AACzBX,IAAAA,SAAS,EAAEA,SAAS,CAACW,OAAD,CADK;AAEzBV,IAAAA,SAAS,EAAEA,SAAS,CAACU,OAAD,CAFK;AAGzBT,IAAAA,OAAO,EAAEA,OAAO,CAACS,OAAD,CAHS;AAIzBR,IAAAA,OAAO,EAAEA,OAAO,CAACQ,OAAD,CAJS;AAKzBP,IAAAA,MAAM,EAAEA,MAAM,CAACO,OAAD,CALW;AAMzBN,IAAAA,YAAY,EAAEA,YAAY,CAACM,OAAD,CAND;AAOzBL,IAAAA,gBAAgB,EAAEA,gBAAgB,CAACK,OAAD,CAPT;AAQzBJ,IAAAA,MAAM,EAAEA,MAAM,CAACI,OAAD,CARW;AASzBH,IAAAA,YAAY,EAAEA,YAAY,CAACG,OAAD,CATD;AAUzBF,IAAAA,OAAO,EAAEA,OAAO,CAACE,OAAD,CAVS;AAWzBD,IAAAA,cAAc,EAAEA,cAAc,CAACC,OAAD;AAXL,GAAL;AAAA,C;;AAAtB","sourcesContent":["import fetchList from './actions/fetchList'\nimport fetchInfo from './actions/fetchInfo'\nimport setInfo from './actions/setInfo'\nimport setList from './actions/setList'\nimport create from './actions/create'\nimport resetCreated from './actions/resetCreated'\nimport resetCreateError from './actions/resetCreateError'\nimport update from './actions/update'\nimport resetUpdated from './actions/resetUpdated'\nimport destroy from './actions/destroy'\nimport resetDestroyed from './actions/resetDestroyed'\n\nexport default options => ({\n  fetchList: fetchList(options),\n  fetchInfo: fetchInfo(options),\n  setInfo: setInfo(options),\n  setList: setList(options),\n  create: create(options),\n  resetCreated: resetCreated(options),\n  resetCreateError: resetCreateError(options),\n  update: update(options),\n  resetUpdated: resetUpdated(options),\n  destroy: destroy(options),\n  resetDestroyed: resetDestroyed(options),\n})\n"]}]}