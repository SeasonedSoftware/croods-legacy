{"remainingRequest":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",\"@babel/preset-flow\",\"@babel/preset-typescript\",[\"/Users/milesdavis/workspace/croods/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"syntax-async-functions\",\"transform-async-to-generator\",\"transform-regenerator\",\"@babel/plugin-transform-runtime\",\"@babel/plugin-proposal-function-bind\",\"@babel/external-helpers\",[\"/Users/milesdavis/workspace/croods/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/milesdavis/workspace/croods/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/milesdavis/workspace/croods/src/reducer/api.js","dependencies":[{"path":"/Users/milesdavis/workspace/croods/src/reducer/api.js","mtime":1545044906000},{"path":"/Users/milesdavis/workspace/croods/node_modules/cache-loader/dist/cjs.js","mtime":1547833067000},{"path":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js","mtime":1547833067000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { apiPrefix } from '../apiReducer';\nimport nestedReducer from '../nestedReducer';\nimport fetchList from './fetchList';\nimport fetchInfo from './fetchInfo';\nimport create from './create';\nimport update from './update';\nimport destroy from './destroy';\n\nvar reducers = function reducers(options) {\n  return {\n    FETCH_LIST: fetchList(options),\n    FETCH_INFO: fetchInfo(options),\n    CREATE: create(options),\n    UPDATE: update(options),\n    DESTROY: destroy(options)\n  };\n};\n\nvar _default = function _default(options) {\n  return function (state) {\n    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var reducer = nestedReducer(reducers(options)[apiPrefix(action.type)]);\n    return reducer(state, action);\n  };\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(reducers, \"reducers\", \"/Users/milesdavis/workspace/croods/src/reducer/api.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/milesdavis/workspace/croods/src/reducer/api.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/milesdavis/workspace/croods/src/reducer/api.js"],"names":["apiPrefix","nestedReducer","fetchList","fetchInfo","create","update","destroy","reducers","options","FETCH_LIST","FETCH_INFO","CREATE","UPDATE","DESTROY","state","action","reducer","type"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,OAAO;AAAA,SAAK;AAC3BC,IAAAA,UAAU,EAAEP,SAAS,CAACM,OAAD,CADM;AAE3BE,IAAAA,UAAU,EAAEP,SAAS,CAACK,OAAD,CAFM;AAG3BG,IAAAA,MAAM,EAAEP,MAAM,CAACI,OAAD,CAHa;AAI3BI,IAAAA,MAAM,EAAEP,MAAM,CAACG,OAAD,CAJa;AAK3BK,IAAAA,OAAO,EAAEP,OAAO,CAACE,OAAD;AALW,GAAL;AAAA,CAAxB;;eAQe,kBAAAA,OAAO;AAAA,SAAI,UAACM,KAAD,EAAwB;AAAA,QAAhBC,MAAgB,uEAAP,EAAO;AAChD,QAAMC,OAAO,GAAGf,aAAa,CAACM,QAAQ,CAACC,OAAD,CAAR,CAAkBR,SAAS,CAACe,MAAM,CAACE,IAAR,CAA3B,CAAD,CAA7B;AACA,WAAOD,OAAO,CAACF,KAAD,EAAQC,MAAR,CAAd;AACD,GAHqB;AAAA,C;;AAAtB;;;;;;;;;;;;0BARMR,Q","sourcesContent":["import { apiPrefix } from '../apiReducer'\nimport nestedReducer from '../nestedReducer'\n\nimport fetchList from './fetchList'\nimport fetchInfo from './fetchInfo'\nimport create from './create'\nimport update from './update'\nimport destroy from './destroy'\n\nconst reducers = options => ({\n  FETCH_LIST: fetchList(options),\n  FETCH_INFO: fetchInfo(options),\n  CREATE: create(options),\n  UPDATE: update(options),\n  DESTROY: destroy(options),\n})\n\nexport default options => (state, action = {}) => {\n  const reducer = nestedReducer(reducers(options)[apiPrefix(action.type)])\n  return reducer(state, action)\n}\n"]}]}