{"remainingRequest":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",\"@babel/preset-flow\",\"@babel/preset-typescript\",[\"/Users/milesdavis/workspace/croods/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"syntax-async-functions\",\"transform-async-to-generator\",\"transform-regenerator\",\"@babel/plugin-transform-runtime\",\"@babel/plugin-proposal-function-bind\",\"@babel/external-helpers\",[\"/Users/milesdavis/workspace/croods/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/milesdavis/workspace/croods/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/milesdavis/workspace/croods/src/Info.js","dependencies":[{"path":"/Users/milesdavis/workspace/croods/src/Info.js","mtime":1545044906000},{"path":"/Users/milesdavis/workspace/croods/node_modules/cache-loader/dist/cjs.js","mtime":1547833067000},{"path":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js","mtime":1547833067000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport customPropTypes from './customPropTypes';\nimport providerProps from './providerProps';\nimport withOptions from './withOptions';\nimport mapStateToProps from './mapStateToProps';\nimport mapDispatchToProps from './mapDispatchToProps';\nimport setOrFetchInfo from './setOrFetchInfo';\nimport renderIfPresent from './renderIfPresent';\nimport renderInfoLoading from './renderInfoLoading';\n\nvar Info =\n/*#__PURE__*/\nfunction (_Component) {\n  babelHelpers.inherits(Info, _Component);\n\n  function Info(props) {\n    var _this;\n\n    babelHelpers.classCallCheck(this, Info);\n    _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(Info).call(this, props));\n    setOrFetchInfo(props);\n    return _this;\n  }\n\n  babelHelpers.createClass(Info, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var id = this.props.id;\n      var oldId = prevProps.id;\n\n      if (id.toString() !== oldId.toString()) {\n        setOrFetchInfo(this.props);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          render = _this$props.render,\n          info = _this$props.info,\n          infoError = _this$props.infoError,\n          renderError = _this$props.renderError;\n      return renderIfPresent(renderError, infoError) || renderInfoLoading(this.props) || render(info, this.props);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n  return Info;\n}(Component);\n\nInfo.propTypes = babelHelpers.objectSpread({\n  /** Ex: 1234 or '1234' */\n  id: customPropTypes.id.isRequired,\n\n  /** Defines the deep properties used in the component. Ex: foo.bar */\n  name: customPropTypes.name.isRequired,\n\n  /** A function returning a React Node. Ex: (info = {}, props) -> < JSX /> */\n  render: PropTypes.func.isRequired,\n\n  /**  Parent element's Id, for more specificity in changes.  */\n  parentId: customPropTypes.id,\n\n  /**  Ex: /foo/bar-_12?&= */\n  path: customPropTypes.path\n}, providerProps);\n\nvar _default = withOptions(connect(mapStateToProps, mapDispatchToProps)(Info));\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Info, \"Info\", \"/Users/milesdavis/workspace/croods/src/Info.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/milesdavis/workspace/croods/src/Info.js\");\n  leaveModule(module);\n})();\n\n;\nInfo.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Info\",\n  \"props\": {\n    \"id\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"customPropTypes.id.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"Ex: 1234 or '1234'\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"customPropTypes.name.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"Defines the deep properties used in the component. Ex: foo.bar\"\n    },\n    \"render\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"A function returning a React Node. Ex: (info = {}, props) -> < JSX />\"\n    },\n    \"parentId\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"customPropTypes.id\"\n      },\n      \"required\": false,\n      \"description\": \"Parent element's Id, for more specificity in changes.\"\n    },\n    \"path\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"customPropTypes.path\"\n      },\n      \"required\": false,\n      \"description\": \"Ex: /foo/bar-_12?&=\"\n    }\n  },\n  \"composes\": [\"./providerProps\"]\n};",{"version":3,"sources":["/Users/milesdavis/workspace/croods/src/Info.js"],"names":["Component","connect","PropTypes","customPropTypes","providerProps","withOptions","mapStateToProps","mapDispatchToProps","setOrFetchInfo","renderIfPresent","renderInfoLoading","Info","props","prevProps","id","oldId","toString","render","info","infoError","renderError","propTypes","isRequired","name","func","parentId","path"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,sGAAMA,KAAN;AACAJ,IAAAA,cAAc,CAACI,KAAD,CAAd;AAFiB;AAGlB;;;;uCAEkBC,S,EAAW;AAAA,UACpBC,EADoB,GACb,KAAKF,KADQ,CACpBE,EADoB;AAAA,UAEhBC,KAFgB,GAENF,SAFM,CAEpBC,EAFoB;;AAI5B,UAAIA,EAAE,CAACE,QAAH,OAAkBD,KAAK,CAACC,QAAN,EAAtB,EAAwC;AACtCR,QAAAA,cAAc,CAAC,KAAKI,KAAN,CAAd;AACD;AACF;;;6BAEQ;AAAA,wBAC0C,KAAKA,KAD/C;AAAA,UACCK,MADD,eACCA,MADD;AAAA,UACSC,IADT,eACSA,IADT;AAAA,UACeC,SADf,eACeA,SADf;AAAA,UAC0BC,WAD1B,eAC0BA,WAD1B;AAGP,aACEX,eAAe,CAACW,WAAD,EAAcD,SAAd,CAAf,IACAT,iBAAiB,CAAC,KAAKE,KAAN,CADjB,IAEAK,MAAM,CAACC,IAAD,EAAO,KAAKN,KAAZ,CAHR;AAKD;;;;;;;;;;EAvBgBZ,S;;AA0BnBW,IAAI,CAACU,SAAL;AACE;AACAP,EAAAA,EAAE,EAAEX,eAAe,CAACW,EAAhB,CAAmBQ,UAFzB;;AAGE;AACAC,EAAAA,IAAI,EAAEpB,eAAe,CAACoB,IAAhB,CAAqBD,UAJ7B;;AAKE;AACAL,EAAAA,MAAM,EAAEf,SAAS,CAACsB,IAAV,CAAeF,UANzB;;AAOE;AACAG,EAAAA,QAAQ,EAAEtB,eAAe,CAACW,EAR5B;;AASE;AACAY,EAAAA,IAAI,EAAEvB,eAAe,CAACuB;AAVxB,GAYKtB,aAZL;;eAeeC,WAAW,CACxBJ,OAAO,CACLK,eADK,EAELC,kBAFK,CAAP,CAGEI,IAHF,CADwB,C;;AAA1B;;;;;;;;;;;;0BAzCMA,I","sourcesContent":["import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport customPropTypes from './customPropTypes'\nimport providerProps from './providerProps'\nimport withOptions from './withOptions'\nimport mapStateToProps from './mapStateToProps'\nimport mapDispatchToProps from './mapDispatchToProps'\nimport setOrFetchInfo from './setOrFetchInfo'\nimport renderIfPresent from './renderIfPresent'\nimport renderInfoLoading from './renderInfoLoading'\n\nclass Info extends Component {\n  constructor(props) {\n    super(props)\n    setOrFetchInfo(props)\n  }\n\n  componentDidUpdate(prevProps) {\n    const { id } = this.props\n    const { id: oldId } = prevProps\n\n    if (id.toString() !== oldId.toString()) {\n      setOrFetchInfo(this.props)\n    }\n  }\n\n  render() {\n    const { render, info, infoError, renderError } = this.props\n\n    return (\n      renderIfPresent(renderError, infoError) ||\n      renderInfoLoading(this.props) ||\n      render(info, this.props)\n    )\n  }\n}\n\nInfo.propTypes = {\n  /** Ex: 1234 or '1234' */\n  id: customPropTypes.id.isRequired,\n  /** Defines the deep properties used in the component. Ex: foo.bar */\n  name: customPropTypes.name.isRequired,\n  /** A function returning a React Node. Ex: (info = {}, props) -> < JSX /> */\n  render: PropTypes.func.isRequired,\n  /**  Parent element's Id, for more specificity in changes.  */\n  parentId: customPropTypes.id,\n  /**  Ex: /foo/bar-_12?&= */\n  path: customPropTypes.path,\n\n  ...providerProps,\n}\n\nexport default withOptions(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(Info),\n)\n"]}]}