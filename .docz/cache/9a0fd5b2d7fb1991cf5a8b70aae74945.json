{"remainingRequest":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",\"@babel/preset-flow\",\"@babel/preset-typescript\",[\"/Users/milesdavis/workspace/croods/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"syntax-async-functions\",\"transform-async-to-generator\",\"transform-regenerator\",\"@babel/plugin-transform-runtime\",\"@babel/plugin-proposal-function-bind\",[\"/Users/milesdavis/workspace/croods/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/milesdavis/workspace/croods/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/milesdavis/workspace/croods/src/prefixedReducer.js","dependencies":[{"path":"/Users/milesdavis/workspace/croods/src/prefixedReducer.js","mtime":1545044906000},{"path":"/Users/milesdavis/workspace/croods/node_modules/cache-loader/dist/cjs.js","mtime":1547833067000},{"path":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js","mtime":1547833067000}],"contextDependencies":[],"result":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport split from 'lodash/split';\nimport last from 'lodash/last';\nexport var parseType = function parseType(type) {\n  return split(type, '/');\n};\nexport var suffix = function suffix(type) {\n  return last(parseType(type));\n};\n\nvar _default = function _default(_ref) {\n  var prefix = _ref.prefix,\n      reducer = _ref.reducer;\n  return function (state, action) {\n    if (!action) {\n      return state || reducer();\n    }\n\n    var _parseType = parseType(action.type),\n        _parseType2 = _slicedToArray(_parseType, 1),\n        actionPrefix = _parseType2[0];\n\n    if (actionPrefix !== prefix) {\n      return state || reducer();\n    }\n\n    return reducer(state, action);\n  };\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(parseType, \"parseType\", \"/Users/milesdavis/workspace/croods/src/prefixedReducer.js\");\n  reactHotLoader.register(suffix, \"suffix\", \"/Users/milesdavis/workspace/croods/src/prefixedReducer.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/milesdavis/workspace/croods/src/prefixedReducer.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/milesdavis/workspace/croods/src/prefixedReducer.js"],"names":["split","last","parseType","type","suffix","prefix","reducer","state","action","actionPrefix"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI;AAAA,SAAIH,KAAK,CAACG,IAAD,EAAO,GAAP,CAAT;AAAA,CAAtB;AACP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAD,IAAI;AAAA,SAAIF,IAAI,CAACC,SAAS,CAACC,IAAD,CAAV,CAAR;AAAA,CAAnB;;eAEQ;AAAA,MAAGE,MAAH,QAAGA,MAAH;AAAA,MAAWC,OAAX,QAAWA,OAAX;AAAA,SAAyB,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACzD,QAAI,CAACA,MAAL,EAAa;AACX,aAAOD,KAAK,IAAID,OAAO,EAAvB;AACD;;AAHwD,qBAKlCJ,SAAS,CAACM,MAAM,CAACL,IAAR,CALyB;AAAA;AAAA,QAKlDM,YALkD;;AAOzD,QAAIA,YAAY,KAAKJ,MAArB,EAA6B;AAC3B,aAAOE,KAAK,IAAID,OAAO,EAAvB;AACD;;AAED,WAAOA,OAAO,CAACC,KAAD,EAAQC,MAAR,CAAd;AACD,GAZc;AAAA,C;;AAAf;;;;;;;;;;;;0BAHaN,S;0BACAE,M","sourcesContent":["import split from 'lodash/split'\nimport last from 'lodash/last'\n\nexport const parseType = type => split(type, '/')\nexport const suffix = type => last(parseType(type))\n\nexport default ({ prefix, reducer }) => (state, action) => {\n  if (!action) {\n    return state || reducer()\n  }\n\n  const [actionPrefix] = parseType(action.type)\n\n  if (actionPrefix !== prefix) {\n    return state || reducer()\n  }\n\n  return reducer(state, action)\n}\n"]}]}