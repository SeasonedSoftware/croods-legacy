{"remainingRequest":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",\"@babel/preset-flow\",\"@babel/preset-typescript\",[\"/Users/milesdavis/workspace/croods/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"syntax-async-functions\",\"transform-async-to-generator\",\"transform-regenerator\",\"@babel/plugin-transform-runtime\",\"@babel/plugin-proposal-function-bind\",[\"/Users/milesdavis/workspace/croods/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/milesdavis/workspace/croods/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/milesdavis/workspace/croods/src/reducer/fetchList.js","dependencies":[{"path":"/Users/milesdavis/workspace/croods/src/reducer/fetchList.js","mtime":1545044906000},{"path":"/Users/milesdavis/workspace/croods/node_modules/cache-loader/dist/cjs.js","mtime":1547833067000},{"path":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js","mtime":1547833067000}],"contextDependencies":[],"result":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { apiSuffix } from '../apiReducer';\n\nvar _default = function _default(options) {\n  return function (state) {\n    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    switch (apiSuffix(action.type)) {\n      case 'REQUEST':\n        {\n          return _objectSpread({}, state, {\n            listPath: action.path,\n            fetchingList: true,\n            listError: null\n          });\n        }\n\n      case 'FAILURE':\n        {\n          return _objectSpread({}, state, {\n            fetchingList: false,\n            listError: action.error.message\n          });\n        }\n\n      case 'SUCCESS':\n        {\n          return _objectSpread({}, state, {\n            fetchingList: false,\n            list: action.list\n          });\n        }\n\n      default:\n        return state;\n    }\n  };\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/milesdavis/workspace/croods/src/reducer/fetchList.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/milesdavis/workspace/croods/src/reducer/fetchList.js"],"names":["apiSuffix","options","state","action","type","listPath","path","fetchingList","listError","error","message","list"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,eAA1B;;eAEe,kBAAAC,OAAO;AAAA,SAAI,UAACC,KAAD,EAAwB;AAAA,QAAhBC,MAAgB,uEAAP,EAAO;;AAChD,YAAQH,SAAS,CAACG,MAAM,CAACC,IAAR,CAAjB;AACE,WAAK,SAAL;AAAgB;AACd,mCACKF,KADL;AAEEG,YAAAA,QAAQ,EAAEF,MAAM,CAACG,IAFnB;AAGEC,YAAAA,YAAY,EAAE,IAHhB;AAIEC,YAAAA,SAAS,EAAE;AAJb;AAMD;;AACD,WAAK,SAAL;AAAgB;AACd,mCACKN,KADL;AAEEK,YAAAA,YAAY,EAAE,KAFhB;AAGEC,YAAAA,SAAS,EAAEL,MAAM,CAACM,KAAP,CAAaC;AAH1B;AAKD;;AACD,WAAK,SAAL;AAAgB;AACd,mCACKR,KADL;AAEEK,YAAAA,YAAY,EAAE,KAFhB;AAGEI,YAAAA,IAAI,EAAER,MAAM,CAACQ;AAHf;AAKD;;AACD;AACE,eAAOT,KAAP;AAxBJ;AA0BD,GA3BqB;AAAA,C;;AAAtB","sourcesContent":["import { apiSuffix } from '../apiReducer'\n\nexport default options => (state, action = {}) => {\n  switch (apiSuffix(action.type)) {\n    case 'REQUEST': {\n      return {\n        ...state,\n        listPath: action.path,\n        fetchingList: true,\n        listError: null,\n      }\n    }\n    case 'FAILURE': {\n      return {\n        ...state,\n        fetchingList: false,\n        listError: action.error.message,\n      }\n    }\n    case 'SUCCESS': {\n      return {\n        ...state,\n        fetchingList: false,\n        list: action.list,\n      }\n    }\n    default:\n      return state\n  }\n}\n"]}]}