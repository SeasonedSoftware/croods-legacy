{"remainingRequest":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",\"@babel/preset-flow\",\"@babel/preset-typescript\",[\"/Users/milesdavis/workspace/croods/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"syntax-async-functions\",\"transform-async-to-generator\",\"transform-regenerator\",\"@babel/plugin-transform-runtime\",\"@babel/plugin-proposal-function-bind\",\"@babel/external-helpers\",[\"/Users/milesdavis/workspace/croods/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/milesdavis/workspace/croods/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/milesdavis/workspace/croods/src/Edit.js","dependencies":[{"path":"/Users/milesdavis/workspace/croods/src/Edit.js","mtime":1545044906000},{"path":"/Users/milesdavis/workspace/croods/node_modules/cache-loader/dist/cjs.js","mtime":1547833067000},{"path":"/Users/milesdavis/workspace/croods/node_modules/babel-loader/lib/index.js","mtime":1547833067000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport customPropTypes from './customPropTypes';\nimport providerProps from './providerProps';\nimport withOptions from './withOptions';\nimport mapStateToProps from './mapStateToProps';\nimport mapDispatchToProps from './mapDispatchToProps';\nimport setOrFetchInfo from './setOrFetchInfo';\nimport renderIfPresent from './renderIfPresent';\nimport renderInfoLoading from './renderInfoLoading';\n\nvar Edit =\n/*#__PURE__*/\nfunction (_Component) {\n  babelHelpers.inherits(Edit, _Component);\n\n  function Edit(props) {\n    var _this;\n\n    babelHelpers.classCallCheck(this, Edit);\n    _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(Edit).call(this, props));\n    setOrFetchInfo(props);\n    return _this;\n  }\n\n  babelHelpers.createClass(Edit, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          updated = _this$props.updated,\n          id = _this$props.id;\n      var oldUpdated = prevProps.updated,\n          oldId = prevProps.id;\n\n      if (id.toString() !== oldId.toString()) {\n        setOrFetchInfo(this.props);\n      }\n\n      if (updated && !oldUpdated) {\n        actions.resetUpdated();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          render = _this$props2.render,\n          actions = _this$props2.actions,\n          info = _this$props2.info,\n          renderError = _this$props2.renderError,\n          infoError = _this$props2.infoError;\n      var _this$props3 = this.props,\n          updating = _this$props3.updating,\n          error = _this$props3.updateError,\n          renderUpdated = _this$props3.renderUpdated,\n          updated = _this$props3.updated;\n      var update = actions.update;\n      return renderIfPresent(renderError, infoError) || renderInfoLoading(this.props) || renderIfPresent(renderUpdated, updated) || render({\n        info: info,\n        update: update,\n        updating: updating,\n        error: error\n      }, this.props);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n  return Edit;\n}(Component);\n\nEdit.propTypes = babelHelpers.objectSpread({\n  /** Ex: 1234 or '1234' */\n  id: customPropTypes.id.isRequired,\n\n  /** Defines the deep properties used in the component. Ex: foo.bar */\n  name: customPropTypes.name.isRequired,\n\n  /** A function returning a React Node. Ex: ({ info = {}, update = (id, ...attributes), updating = bool, error }, props) -> < JSX /> */\n  render: PropTypes.func.isRequired,\n\n  /** A function returning a React Node. Ex: (updated = {}) -> < JSX /> */\n  renderUpdated: PropTypes.func,\n\n  /**  Parent element's Id, for more specificity in changes.  */\n  parentId: customPropTypes.id,\n\n  /**  Ex: /foo/bar-_12?&= */\n  path: customPropTypes.path,\n\n  /** Parse specific responses to adjust the API to croods patterns. Ex: (json, response, requestAttributes) -> Object */\n  parseInfoResponse: PropTypes.func,\n  // (json, response, requestAttributes) -> Object\n  parseUpdateResponse: PropTypes.func\n}, providerProps);\n\nvar _default = withOptions(connect(mapStateToProps, mapDispatchToProps)(Edit));\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Edit, \"Edit\", \"/Users/milesdavis/workspace/croods/src/Edit.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/milesdavis/workspace/croods/src/Edit.js\");\n  leaveModule(module);\n})();\n\n;\nEdit.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Edit\",\n  \"props\": {\n    \"id\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"customPropTypes.id.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"Ex: 1234 or '1234'\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"customPropTypes.name.isRequired\"\n      },\n      \"required\": false,\n      \"description\": \"Defines the deep properties used in the component. Ex: foo.bar\"\n    },\n    \"render\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"A function returning a React Node. Ex: ({ info = {}, update = (id, ...attributes), updating = bool, error }, props) -> < JSX />\"\n    },\n    \"renderUpdated\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"A function returning a React Node. Ex: (updated = {}) -> < JSX />\"\n    },\n    \"parentId\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"customPropTypes.id\"\n      },\n      \"required\": false,\n      \"description\": \"Parent element's Id, for more specificity in changes.\"\n    },\n    \"path\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"customPropTypes.path\"\n      },\n      \"required\": false,\n      \"description\": \"Ex: /foo/bar-_12?&=\"\n    },\n    \"parseInfoResponse\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Parse specific responses to adjust the API to croods patterns. Ex: (json, response, requestAttributes) -> Object\"\n    },\n    \"parseUpdateResponse\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  },\n  \"composes\": [\"./providerProps\"]\n};",{"version":3,"sources":["/Users/milesdavis/workspace/croods/src/Edit.js"],"names":["Component","connect","PropTypes","customPropTypes","providerProps","withOptions","mapStateToProps","mapDispatchToProps","setOrFetchInfo","renderIfPresent","renderInfoLoading","Edit","props","prevProps","actions","updated","id","oldUpdated","oldId","toString","resetUpdated","render","info","renderError","infoError","updating","error","updateError","renderUpdated","update","propTypes","isRequired","name","func","parentId","path","parseInfoResponse","parseUpdateResponse"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport customPropTypes from './customPropTypes'\nimport providerProps from './providerProps'\nimport withOptions from './withOptions'\nimport mapStateToProps from './mapStateToProps'\nimport mapDispatchToProps from './mapDispatchToProps'\nimport setOrFetchInfo from './setOrFetchInfo'\nimport renderIfPresent from './renderIfPresent'\nimport renderInfoLoading from './renderInfoLoading'\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props)\n    setOrFetchInfo(props)\n  }\n\n  componentDidUpdate(prevProps) {\n    const { actions, updated, id } = this.props\n    const { updated: oldUpdated, id: oldId } = prevProps\n\n    if (id.toString() !== oldId.toString()) {\n      setOrFetchInfo(this.props)\n    }\n\n    if (updated && !oldUpdated) {\n      actions.resetUpdated()\n    }\n  }\n\n  render() {\n    const { render, actions, info, renderError, infoError } = this.props\n    const { updating, updateError: error, renderUpdated, updated } = this.props\n    const { update } = actions\n\n    return (\n      renderIfPresent(renderError, infoError) ||\n      renderInfoLoading(this.props) ||\n      renderIfPresent(renderUpdated, updated) ||\n      render({ info, update, updating, error }, this.props)\n    )\n  }\n}\n\nEdit.propTypes = {\n  /** Ex: 1234 or '1234' */\n  id: customPropTypes.id.isRequired,\n  /** Defines the deep properties used in the component. Ex: foo.bar */\n  name: customPropTypes.name.isRequired,\n  /** A function returning a React Node. Ex: ({ info = {}, update = (id, ...attributes), updating = bool, error }, props) -> < JSX /> */\n  render: PropTypes.func.isRequired,\n  /** A function returning a React Node. Ex: (updated = {}) -> < JSX /> */\n  renderUpdated: PropTypes.func,\n  /**  Parent element's Id, for more specificity in changes.  */\n  parentId: customPropTypes.id,\n  /**  Ex: /foo/bar-_12?&= */\n  path: customPropTypes.path,\n\n  /** Parse specific responses to adjust the API to croods patterns. Ex: (json, response, requestAttributes) -> Object */\n  parseInfoResponse: PropTypes.func, // (json, response, requestAttributes) -> Object\n  parseUpdateResponse: PropTypes.func, // (json, response, requestAttributes) -> Object\n  ...providerProps,\n}\n\nexport default withOptions(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(Edit),\n)\n"]}]}